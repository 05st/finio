data Nat = Zero | Succ Nat

fn plus
    (Nat::Zero) b = b
    (Nat::Succ a) b = Nat::Succ (plus a b)

# let test : {a : i32, b : str} = true

# type Point2D = {x : i32, y : i32}

# type Point3D = {x : i32, y : i32, z : i32}
# type Point3D = {..Point2D, z : i32}

let a = {x = 1, y = 2}
let b : {x : i32, y : i32, z : i32} = {..a, z = 3}
