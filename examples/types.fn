data Nat = Zero | Succ Nat

fn plus
    a b =
        match a
            Nat::Zero => b
            Nat::Succ n => Nat::Succ (plus n b)

# {a : i32, b : bool, ...}
# 
# type Point2D = {x : i32, y : i32}
# type Point3D = {..Point2D, z : i32}
#
# let two = {x = 1, y = 2}
# in let three = {..two, z = 3}
# 
# in let three = {two | z = 3}
